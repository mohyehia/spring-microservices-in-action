spring:
  application:
    name: api-gateway

  lifecycle:
    timeout-per-shutdown-phase: 30s

  data:
    redis:
      host: redis
      port: 6379

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
      filter:
        request-rate-limiter:
          enabled: true
      routes:
        - id: organization-service
          uri: http://organization-service
          predicates:
            - Path=/organization-ms/**
          filters:
            - RewritePath=/organization-ms/(?<path>.*), /$\{path}
            - AddRequestHeader=X-Tenant-ID, my-org
            - AddResponseHeader=X-Tenant-ID, my-org
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1
        - id: license-service
          uri: http://license-service
          predicates:
            - Path=/license-ms/**
          filters:
            - RewritePath=/license-ms/(?<path>.*), /$\{path}
            - AddRequestHeader=X-Tenant-ID, my-org
            - AddResponseHeader=X-Tenant-ID, my-org
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

server:
  port: 8082
  shutdown: graceful

management:
  endpoint:
    gateway:
      enabled: true
    health:
      probes:
        enabled: true
      show-details: always
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    diskspace:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  observations:
    key-values:
      department: ${SERVICE_DEPARTMENT:Information Technology}
      team: ${SERVICE_TEAM:Software Development}
      env: ${SERVICE_ENVIRONMENT:dev}
      region: ${SERVICE_REGION:us-east1}

jaeger:
  tracing:
    url: http://jaeger:4318/v1/traces

logging:
  level:
    root: info
    org.springframework.cloud.gateway: trace
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'